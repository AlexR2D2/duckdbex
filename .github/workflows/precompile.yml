name: precompile

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

env:
  DUCKDBEX_VERSION: "0.3.12"
  DUCKDB_VERSION: "1.3.1"

jobs:
  linux:
    name: Linux Erlang/OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    runs-on: ubuntu-22.04
    env:
      MIX_ENV: "prod"
    strategy:
      matrix:
        include:
          - otp: "26.0"
            elixir: "1.16.3"
          - otp: "26.0"
            elixir: "1.17.3"
          - otp: "27.0"
            elixir: "1.17.3"
          - otp: "27.0"
            elixir: "1.18.2"
          - otp: "28.0"
            elixir: "1.18.4"
    steps:
      - uses: actions/checkout@v3

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Setup Mix
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Cache mix deps
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
            ~/.cache/duckdbex-nif-*
          key: ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-

      - name: Setup DuckDBex NIF
        run: |
          mkdir -p ~/.cache
          curl -L https://github.com/AlexR2D2/duckdbex/releases/latest/download/duckdbex-nif-${DUCKDB_VERSION}-x86_64-linux-gnu-${DUCKDBEX_VERSION}.tar.gz -o ~/.cache/duckdbex-nif-${DUCKDB_VERSION}-x86_64-linux-gnu-${DUCKDBEX_VERSION}.tar.gz
          ls -la ~/.cache/

      - name: Get Dependencies
        run: |
          mix deps.get
          # Wait a moment to ensure NIF is available
          sleep 5
          ls -la ~/.cache/

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential automake autoconf pkg-config bc m4 unzip zip \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            gcc-riscv64-linux-gnu g++-riscv64-linux-gnu \
            libstdc++-10-dev erlang-dev

      - name: Patch source code
        run: |
          echo '#define _GLIBCXX_USE_C99_MATH 1' > temp_header.hpp
          echo '#include <cmath>' >> temp_header.hpp
          echo '#include <math.h>' >> temp_header.hpp
          cat temp_header.hpp c_src/value_to_term.cpp > value_to_term_new.cpp
          mv value_to_term_new.cpp c_src/value_to_term.cpp
          sed -i 's/std::isinf/std::isfinite/g' c_src/value_to_term.cpp
          sed -i 's/std::isnan/std::isfinite/g' c_src/value_to_term.cpp

      - name: Mix Test
        run: |
          MIX_ENV=test mix test

      - name: Create precompiled library
        run: |
          export ELIXIR_MAKE_CACHE_DIR=$(pwd)/cache
          mkdir -p "${ELIXIR_MAKE_CACHE_DIR}"
          export CXXFLAGS="-D_GNU_SOURCE -std=c++11"
          mix elixir_make.precompile

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            cache/*.tar.gz

  macos:
    runs-on: ${{matrix.runner}}
    name: Mac (${{ matrix.runner == 'macos-13' && 'Intel' || 'ARM' }}) Erlang/OTP ${{matrix.otp}} / Elixir
    env:
      MIX_ENV: "prod"
    strategy:
      matrix:
        include:
          - runner: "macos-13"
            otp: "26.0"
            elixir: "1.16.3"
          - runner: "macos-13"
            otp: "26.0"
            elixir: "1.17.3"
          - runner: "macos-13"
            otp: "27.0"
            elixir: "1.17.3"
          - runner: "macos-13"
            otp: "27.0"
            elixir: "1.18.2"
          - runner: "macos-13"
            otp: "28.0"
            elixir: "1.18.4"
          - runner: "macos-14"
            otp: "26.0"
            elixir: "1.16.3"
          - runner: "macos-14"
            otp: "26.0"
            elixir: "1.17.3"
          - runner: "macos-14"
            otp: "27.0"
            elixir: "1.17.3"
          - runner: "macos-14"
            otp: "27.0"
            elixir: "1.18.2"
          - runner: "macos-14"
            otp: "28.0"
            elixir: "1.18.4"
    steps:
      - uses: actions/checkout@v3

      - uses: asdf-vm/actions/install@v2
        with:
          tool_versions: |
            erlang ${{matrix.otp}}
            elixir ${{matrix.elixir}}

      - name: Setup Mix
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Cache mix deps
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
            ~/Library/Caches/duckdbex-nif-*
          key: ${{ runner.os }}-${{ matrix.runner }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.runner }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-

      - name: Setup DuckDBex NIF
        run: |
          mkdir -p ~/Library/Caches
          if [ "${{ matrix.runner }}" = "macos-13" ]; then
            curl -L https://github.com/AlexR2D2/duckdbex/releases/latest/download/duckdbex-nif-${DUCKDB_VERSION}-x86_64-darwin-${DUCKDBEX_VERSION}.tar.gz -o ~/Library/Caches/duckdbex-nif-${DUCKDB_VERSION}-x86_64-darwin-${DUCKDBEX_VERSION}.tar.gz
          else
            curl -L https://github.com/AlexR2D2/duckdbex/releases/latest/download/duckdbex-nif-${DUCKDB_VERSION}-aarch64-darwin-${DUCKDBEX_VERSION}.tar.gz -o ~/Library/Caches/duckdbex-nif-${DUCKDB_VERSION}-aarch64-darwin-${DUCKDBEX_VERSION}.tar.gz
          fi
          ls -la ~/Library/Caches/

      - name: Get Dependencies
        run: |
          mix deps.get
          # Wait a moment to ensure NIF is available
          sleep 5
          ls -la ~/Library/Caches/

      - name: Install libomp
        run: |
          brew install libomp

      - name: Patch source code
        run: |
          echo '#include <cmath>' > temp_header.hpp
          echo '#include <math.h>' >> temp_header.hpp
          cat temp_header.hpp c_src/value_to_term.cpp > value_to_term_new.cpp
          mv value_to_term_new.cpp c_src/value_to_term.cpp
          sed -i '' 's/std::isinf/std::isfinite/g' c_src/value_to_term.cpp
          sed -i '' 's/std::isnan/std::isfinite/g' c_src/value_to_term.cpp

      - name: Mix Test
        run: |
          MIX_ENV=test mix test

      - name: Create precompiled library
        run: |
          export ELIXIR_MAKE_CACHE_DIR=$(pwd)/cache
          mkdir -p "${ELIXIR_MAKE_CACHE_DIR}"
          export CXXFLAGS="-std=c++11"
          mix elixir_make.precompile

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ matrix.runner == 'macos-13' && 'cache/*x86_64*.tar.gz' || 'cache/*aarch64*.tar.gz' }}
